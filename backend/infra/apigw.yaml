---
swagger: "2.0"
info:
  description: "API to access codingtips application"
  version: "1.0"
  title: "startup-sales-dw-apigw"
basePath: "/dev"
schemes:
- "https"
paths:
  "/data":
    post:
      responses:
        "200":
          description: "200 response"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: ${post_lambda_arn}
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Max-Age:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Max-Age: "'7200'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,HEAD,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Headers: "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        contentHandling: "CONVERT_TO_TEXT"
        type: "mock"
  "/data/addFollowup":
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Max-Age:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Max-Age: "'7200'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,HEAD,GET,POST,PUT,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Headers: "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        contentHandling: "CONVERT_TO_TEXT"
        type: "mock"
    post:
      responses:
        "200":
          description: "200 response"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: ${post_lambda_arn}
        passthroughBehavior: "when_no_match"
        type: "aws_proxy"
definitions:
  Empty:
    type: "object"
    title: "Schema"